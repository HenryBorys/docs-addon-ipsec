---
title: Configuring IPsec with CredHub
owner: Platform Security & Compliance Team
---

<strong><%= modified_date %></strong>

  <strong>Credhub Manifest Setup</strong>

  The certificates can be generated by Credhub and monitored by Ops Manager.

  <p class="note warning"><strong>Warning:</strong> Certificate rotation cannot be done through Credhub rotation mechanism.
    You need to manually generate new certificates. For more information, see [Rotating Certificates with Credhub](#credhub_cert_rotation).
  </p>

  1) In the runtime-config for IPsec introduce variables assigning to the ca and instance certificate.

	The instance cert needs to be signed by the ca cert. Under options for the instance cert, set the ca property to the variable name of the defined ca cert.

	<p class="note warning">
    	Important: the name of the variable needs to be prefixed with /ipsec_addon/
	</p>

     Example:
     <pre>
      <strong>variables:</strong>
	  \- name: <strong>/ipsec_addon/root_ca_1</strong>
	     type: certificate
	     options:
	        is_ca: true
	        common_name: ipsec_addon_root_ca_1

	  \- name: <strong>/ipsec_addon/instance_cert_1</strong>
	     type: certificate
	     options:
	       ca: <strong>/ipsec_addon/root_ca_1</strong>
	       common_name: ipsec_addon_instance_cert_1
     </pre>

  2) - Add a new item in ipsec.ca\_certificates with the variable name and accessor to the certificate.
       Example: ((/ipsec_addon/instance_cert_1.ca))

     - Set instance\_certificate with the variable name and accessor to the certificate.
       Example: ((/ipsec_addon/instance_cert_1.certificate))

     - Set instance\_key with the variable name and accessor to the private key.
       Example: ((/ipsec_addon/instance_cert_1.private_key))

  Example of a Runtime Config:
  <pre>
  <strong>releases:</strong>
  \- name: ipsec
      <strong>version</strong>: 1.x.x

  <strong>variables:</strong>
  \- name: <strong>/ipsec_addon/root_ca_1</strong>
     type: certificate
     options:
        is_ca: true
        common_name: ipsec_addon_root_ca_1

  \- name: <strong>/ipsec_addon/instance_cert_1</strong>
     type: certificate
     options:
       ca: <strong>/ipsec_addon/root_ca_1</strong>
       common_name: ipsec_addon_instance_cert_1

  addons:
  \- name: ipsec-addon
      <strong>jobs</strong>:
      \- <strong>name</strong>: ipsec
        release: ipsec
        properties:
          ipsec:
            <strong>optional</strong>: false
            <strong>ipsec\_subnets</strong>:
            \- 10.0.1.1/20
            <strong>no\_ipsec\_subnets</strong>:
            \- 10.0.1.10/32  # bosh director
            \- 10.0.1.4/32 # ops managers
            <strong>instance\_certificate</strong>: ((/ipsec_addon/instance_cert_1.private_key))
            <strong>instance\_private\_key</strong>: ((/ipsec_addon/instance_cert_1.certificate))
            <strong>ca\_certificates</strong>:
              \- ((/ipsec_addon/instance_cert_1.ca))
      include:
        stemcell:
        - <strong>os</strong>: ubuntu-trusty
        - <strong>os</strong>: ubuntu-xenial
  </pre>

  <strong><a id="credhub_cert_rotation"></a>Rotating Certificates with CredHub</strong>

  1) Use the BOSH CLI and download the IPsec Runtime Config

     <pre class="terminal">
     bosh -e BOSH-ENVIRONMENT runtime-config > PATH-TO-SAVE-THE-RUNTIME-CONFIG
     </pre>

  1) Use CredHub CLI to ensure the new cert variable names are not already used

  	1) SSH onto the Opsman VM

  	1) Target the CredHub api server (The CredHub api is the bosh director)

  	Ex:
	<pre class="terminal">
  	credhub api --server 10.0.0.5:8844 --ca-cert /var/tempest/workspaces/default/root_ca_certificate
	Setting the target url: https://10.0.0.5:8844
	</pre>

  	1) Retrieve the UAA admin credential and login to CredHub

  	Login to Ops Manager, navigate to the "Credentials" tab on the BOSH Director tile. Open "Uaa Admin User Credentials" to retrieve the credentials

  	Login to CredHub using the retrieved credentials

  	Ex:
	<pre class="terminal">
  	~$ credhub login
	username: admin
	password: **************************************
	Login Successful
	</pre>

	<pre class="terminal">
  	 ~$ credhub find -n /ipsec_addon/root_ca_2
  	 No credentials exist which match the provided parameters
	</pre>

	<pre class="terminal">
	 ~$ credhub find -n /ipsec_addon/instance_cert_2
	 No credentials exist which match the provided parameters
	</pre>

	If the certs exist use a different name.

  1) Add a new set of ca cert, instance cert, and private key

     <pre>
      <strong>variables:</strong>
	  \- name: /ipsec_addon/root_ca_1
	     type: certificate
	     options:
	        is_ca: true
	        common_name: ipsec_addon_root_ca_1

	  \- name: /ipsec_addon/instance_cert_1
	     type: certificate
	     options:
	       ca: /ipsec_addon/root_ca_1
	       common_name: ipsec_addon_instance_cert_1
	  <strong>
	  \- name: /ipsec_addon/root_ca_2
	     type: certificate
	     options:
	        is_ca: true
	        common_name: ipsec_addon_root_ca_2

	  \- name: /ipsec_addon/instance_cert_2
	     type: certificate
	     options:
	       ca: /ipsec_addon/root_ca_2
	       common_name: ipsec_addon_instance_cert_2
	  </strong>
     </pre>

    1) Add a new item in ipsec.ca\_certificates with the new variable name and accessor to the certificate.
       Example:
       <pre>
        properties:
          ipsec:
            optional: false
            ipsec\_subnets:
            \- 10.0.1.1/20
            no\_ipsec\_subnets:
            \- 10.0.1.10/32  # bosh director
            \- 10.0.1.4/32 # ops managers
            instance\_certificate: ((/ipsec_addon/instance_cert_1.private_key))
            instance\_private\_key: ((/ipsec_addon/instance_cert_1.certificate))
            <strong>ca\_certificates</strong>:
              \- ((/ipsec_addon/root_ca_1.certificate))
              <strong>\- ((/ipsec_addon/root_ca_2.certificate))</strong>
       </pre>

    1) Update the runtime config and apply changes to the entire foundation
       Verify the output when updating the runtime-config:

		<pre class="terminal">
		  addons:
		  - name: ipsec-addon
		    properties:
		      ipsec:
		        ca_certificates:
		+       - "<redacted>"

		  variables:
		+ - name: "/ipsec_addon/root_ca_2"
		+   options:
		+     common_name: ipsec_addon_root_ca_2
		+     is_ca: true
		+   type: certificate
		+ - name: "/ipsec_addon/instance_cert_2"
		+   options:
		+     ca: "/ipsec_addon/root_ca_2"
		+     common_name: ipsec_addon_instance_cert_2
		+   type: certificate
		</pre>

    1) - Set instance\_certificate with the new variable name and accessor to the certificate.
       - Set instance\_key with the new variable name and accessor to the private key.

       Example:
       <pre>
        properties:
          ipsec:
            optional: false
            ipsec\_subnets:
            \- 10.0.1.1/20
            no\_ipsec\_subnets:
            \- 10.0.1.10/32  # bosh director
            \- 10.0.1.4/32 # ops managers
            <strong>instance\_certificate: ((/ipsec_addon/instance_cert_2.private_key))</strong>
            <strong>instance\_private\_key: ((/ipsec_addon/instance_cert_2.certificate))</strong>
            ca\_certificates:
              \- ((/ipsec_addon/root_ca_1.certificate))
              \- ((/ipsec_addon/root_ca_2.certificate))
       </pre>

    1) Update the runtime config and apply changes to the entire foundation
       Verify the output when updating the runtime-config:
		<pre class="terminal">
		  addons:
		  - name: ipsec-addon
		    properties:
		      ipsec:
		-       instance_certificate: "<redacted>"
		+       instance_certificate: "<redacted>"
		-       instance_private_key: "<redacted>"
		+       instance_private_key: "<redacted>"
		</pre>

    1) - Remove the old ca\_certificates cert entry
		 Example: /ipsec_addon/root_ca_1

       - Remove the old set of certificate variables
         Example: /ipsec_addon/root_ca_1, /ipsec_addon/instance_cert_1

         Example: Below should not have references to the old certs
	     <pre>
	      <strong>variables:</strong>
		  \- name: /ipsec_addon/root_ca_2
		     type: certificate
		     options:
		        is_ca: true
		        common_name: ipsec_addon_root_ca_2

		  \- name: /ipsec_addon/instance_cert_2
		     type: certificate
		     options:
		       ca: /ipsec_addon/root_ca_2
		       common_name: ipsec_addon_instance_cert_2

		  addons:
		  \- name: ipsec-addon
		      <strong>jobs</strong>:
		      \- <strong>name</strong>: ipsec
		        release: ipsec
		        properties:
		          ipsec:
		            <strong>optional</strong>: false
		            <strong>ipsec\_subnets</strong>:
		            \- 10.0.1.1/20
		            <strong>no\_ipsec\_subnets</strong>:
		            \- 10.0.1.10/32  # bosh director
		            \- 10.0.1.4/32 # ops managers
		            <strong>instance\_certificate</strong>: ((/ipsec_addon/instance_cert_2.private_key))
		            <strong>instance\_private\_key</strong>: ((/ipsec_addon/instance_cert_2.certificate))
		            <strong>ca\_certificates</strong>:
		              \- ((/ipsec_addon/root_ca_2.certificate))
		      include:
		        stemcell:
		        - <strong>os</strong>: ubuntu-trusty
		        - <strong>os</strong>: ubuntu-xenial
	     </pre>


    1) Update the runtime config and apply changes to the entire foundation
       Verify the output when updating the runtime-config:
		<pre class="terminal">
		  addons:
		  - name: ipsec-addon
		    properties:
		      ipsec:
		        ca_certificates:
		-       - "<redacted>"

		  variables:
		- - name: "/ipsec_addon/root_ca_1"
		-   options:
		-     common_name: ipsec_addon_root_ca_1
		-     is_ca: true
		-   type: certificate
		- - name: "/ipsec_addon/instance_cert_1"
		-   options:
		-     ca: "/ipsec_addon/root_ca_1"
		-     common_name: ipsec_addon_instance_cert_1
		-   type: certificate
		</pre>

	1) Remove the set of certificates from CredHub

	 	credhub delete -n /ipsec_addon/root_ca_1
		credhub delete -n /ipsec_addon/instance_cert_1
