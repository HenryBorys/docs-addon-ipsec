---
title: Renewing Expired IPsec Certificates
owner: Security Engineering
---

<strong><%= modified_date %></strong>

This topic describes the basic process that deployers can use to renew any already expired certificates contained in
the <%= vars.product_full %> manifest.

##<a id="about-expiration"></a>About Certificate Expiration

<%= vars.product_short %> relies upon X.509 certificates to secure the communications between communicating peers.

Like all certificates, <%= vars.product_short %> certificates have a finite lifetime and eventually expire.  The certificates generated by the
procedure provided in the installation instructions, [Generate a Self-Signed Certificate](./installing.html#self-signed)
have a default lifetime of one year.  Regardless of their specific lifetime, all certificates must eventually be rotated, and so
it is important for the operations team to plan accordingly and remember to rotate <%= vars.product_short %> certificates before they actually expire.

<p class="note"><strong>Note:</strong> Rotating the certificates while they are still valid
  avoids any unscheduled interruption in service.</p>

##<a id="renew-certs"></a>Renew Expired <%= vars.product_short %> Certificates

To renew expired <%= vars.product_short %> certificates, do the following:

1. Retrieve the latest runtime config by running the following command:

    ```
    bosh -e BOSH-ENVIRONMENT runtime-config > PATH-TO-SAVE-THE-RUNTIME-CONFIG
    ```

2. Generate a new set of certificates.

   For development or test environments, you can use self-signed certificates.
   For information about self-signed certificates, see [Generate a Self-Signed Certificate](./installing.html#self-signed).

   or:

   generate and store the certificates in CredHub. For more information see [CredHub Manifest Setup](./credhub.html).

3. In the runtime `config.yml` file saved from step 1, update the `optional` field to `true` and update the certificate fields with new certificates.
   For more information about these fields,
   see the field descriptions under [Create the <%= vars.product_short %> Manifest](./installing.html#create-mfest).
    <pre>
    properties:
      ipsec:
        <strong>optional</strong>: true
        <strong>instance\_certificate</strong>: |
          -----BEGIN CERTIFICATE-----
          EXAMPLEAhigAwIBAgIRAIvrBY2TttU/LeRhO+V1t0YwDQYJKoZIhvcNAQELBQAw
          ...
          -----END CERTIFICATE-----
        <strong>instance\_private\_key</strong>: |
          -----BEGIN EXAMPLE RSA PRIVATE KEY-----
          EXAMPLExRSAxPRIVATExKEYxDATAxEXAMPLExRSAxPRIVATExKEYxDATA
          ...
          -----END EXAMPLE RSA PRIVATE KEY-----
        <strong>ca\_certificates</strong>:
          \- |
            -----BEGIN CERTIFICATE-----
            EXAMPLEAvGgAwIBAgIBATANBgkqhkiG9w0BAQsFADAUMRIwEAYDVQQDEwl0ZXN0
            ...
            -----END CERTIFICATE-----
    </pre>

    If you want to use a CredHub Certificate, follow the steps in
    [CredHub Manifest Setup](./credhub.html).

    Example:
    <pre>
    <strong>variables:</strong>
    \- name: <strong>/ipsec_addon/root_ca_1</strong>
       type: certificate
       options:
          is_ca: true
          common_name: ipsec_addon_root_ca_1

    \- name: <strong>/ipsec_addon/instance_cert_1</strong>
       type: certificate
       options:
         ca: <strong>/ipsec_addon/root_ca_1</strong>
         common_name: ipsec_addon_instance_cert_1

    addons:
      \- name: ipsec-addon
          <strong>jobs</strong>:
          \- <strong>name</strong>: ipsec
            release: ipsec
            properties:
              ipsec:
                <strong>optional</strong>: true
                <strong>ipsec\_subnets</strong>:
                \- 10.0.1.1/20
                <strong>no\_ipsec\_subnets</strong>:
                \- 10.0.1.10/32  # bosh director
                \- 10.0.1.4/32 # ops managers
                <strong>instance\_certificate</strong>: ((/ipsec_addon/instance_cert_1.private_key))
                <strong>instance\_private\_key</strong>: ((/ipsec_addon/instance_cert_1.certificate))
                <strong>ca\_certificates</strong>:
                  \- ((/ipsec_addon/root_ca_1.certificate))
          include:
            stemcell:
            - <strong>os</strong>: ubuntu-trusty
            - <strong>os</strong>: ubuntu-xenial
    </pre>


4. Update the runtime config by running the following command:

    ```
    bosh -e BOSH-ENVIRONMENT update-runtime-config --name=ipsec PATH-TO-SAVE-THE-RUNTIME-CONFIG
    ```

5. Navigate to your **Installation Dashboard** in <%= vars.ops_manager %>.
6. If you are using <%= vars.ops_manager %> v2.3 or later, click **Review Pending Changes**.
   For more information about this <%= vars.ops_manager %> page,
   see [Reviewing Pending Product Changes](https://docs.pivotal.io/pivotalcf/customizing/review-pending-changes.html).
7. Click **Apply Changes**.
8. Remove the `optional: true` set in step 3.
9. Repeat steps 4 to 7.
